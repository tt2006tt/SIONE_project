<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050041: Last Updated: Fri Feb 05 16:52:13 2016
<BR><P>
<H3>Maximum Stack Usage =        232 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; handleGesture &rArr; readGesture &rArr; processGestureData &rArr; __aeabi_idivmod
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[ac]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[15]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[12]">DMA1_Channel1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[13]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[14]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[f]">EXTI0_1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[10]">EXTI2_3_IRQHandler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[11]">EXTI4_15_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[d]">FLASH_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1e]">I2C2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[e]">RCC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[20]">SPI2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_stm32f0xx.o(.text) referenced from startup_stm32f030.o(.text)
 <LI><a href="#[19]">TIM14_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1a]">TIM15_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[16]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[17]">TIM1_CC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[18]">TIM3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[21]">USART1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[22]">USART2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[25]">__main</a> from __main.o(!!!main) referenced from startup_stm32f030.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[26]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[28]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[af]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b0]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[29]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[b1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2d]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b2]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b3]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[be]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[32]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c7]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[c8]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[c9]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ca]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[cc]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[27]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[cd]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2a]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[ce]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2e]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; handleGesture &rArr; readGesture &rArr; processGestureData &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[ae]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[31]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[d0]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[33]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f030.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_stm32f0xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, system_stm32f0xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>PA3_EXTI_Config</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gesture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PA3_EXTI_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>handleGesture</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, gesture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = handleGesture &rArr; readGesture &rArr; processGestureData &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGesture
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isGestureAvailable
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Puts
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>main</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, gesture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = main &rArr; handleGesture &rArr; readGesture &rArr; processGestureData &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableGestureSensor
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Puts
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDS9960_i2c_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleGesture
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA3_EXTI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[d1]"></a>RCC_DeInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>RCC_HSEConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[4c]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[d3]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>RCC_HSICmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>RCC_AdjustHSI14CalibrationValue</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>RCC_HSI14Cmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>RCC_HSI14ADCRequestCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>RCC_LSEConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>RCC_LSEDriveConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>RCC_LSICmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>RCC_PLLConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>RCC_PLLCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>RCC_PREDIV1Config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>RCC_MCOConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>RCC_HCLKConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>RCC_PCLKConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>RCC_CECCLKConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>RCC_I2CCLKConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_Init
</UL>

<P><STRONG><a name="[e6]"></a>RCC_USARTCLKConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 366 bytes, Stack size 32 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[e7]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA3_EXTI_Config
</UL>

<P><STRONG><a name="[3d]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA3_EXTI_Config
</UL>

<P><STRONG><a name="[5d]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_DeInit
</UL>

<P><STRONG><a name="[50]"></a>RCC_AHBPeriphResetCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[54]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[52]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
</UL>

<P><STRONG><a name="[ea]"></a>RCC_ITConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>RCC_ClearFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>RCC_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>EXTI_DeInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>EXTI_Init</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA3_EXTI_Config
</UL>

<P><STRONG><a name="[ef]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>EXTI_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
</UL>

<P><STRONG><a name="[39]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>GPIO_DeInit</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, stm32f0xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphResetCmd
</UL>

<P><STRONG><a name="[3c]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_DeInit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA3_EXTI_Config
</UL>

<P><STRONG><a name="[f3]"></a>GPIO_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f5]"></a>GPIO_ReadInputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>GPIO_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
</UL>

<P><STRONG><a name="[51]"></a>I2C_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f0xx_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_DeInit
</UL>

<P><STRONG><a name="[61]"></a>I2C_Init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f0xx_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDS9960_i2c_Init
</UL>

<P><STRONG><a name="[fc]"></a>I2C_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>I2C_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_DeInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDS9960_i2c_Init
</UL>

<P><STRONG><a name="[fd]"></a>I2C_SoftwareResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>I2C_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>I2C_StretchClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>I2C_StopModeCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>I2C_DualAddressCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>I2C_OwnAddress2Config</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>I2C_GeneralCallCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>I2C_SlaveByteControlCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>I2C_SlaveAddressConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>I2C_10BitAddressingModeCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>I2C_AutoEndCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>I2C_ReloadCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>I2C_NumberOfBytesConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>I2C_MasterRequestConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>I2C_GenerateSTART</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>I2C_10BitAddressHeaderCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>I2C_GetAddressMatched</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>I2C_GetTransferDirection</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>I2C_TransferHandling</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, stm32f0xx_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_TransferHandling
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataBlock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataBlock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>

<P><STRONG><a name="[111]"></a>I2C_SMBusAlertCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>I2C_ClockTimeoutCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>I2C_ExtendedClockTimeoutCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>I2C_IdleClockTimeoutCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>I2C_TimeoutAConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>I2C_TimeoutBConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>I2C_CalculatePEC</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>I2C_PECRequestCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>I2C_GetPEC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>I2C_ReadRegister</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataBlock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataBlock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>

<P><STRONG><a name="[6a]"></a>I2C_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataBlock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[11b]"></a>I2C_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataBlock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataBlock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>

<P><STRONG><a name="[67]"></a>I2C_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataBlock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataBlock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>

<P><STRONG><a name="[11c]"></a>I2C_GetITStatus</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>I2C_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>SYSCFG_DeInit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>SYSCFG_MemoryRemapConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>SYSCFG_DMAChannelRemapConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>SYSCFG_I2CFastModePlusConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f0xx_syscfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA3_EXTI_Config
</UL>

<P><STRONG><a name="[122]"></a>SYSCFG_BreakConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>SYSCFG_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>SYSCFG_ClearFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>USART_DeInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f0xx_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[55]"></a>USART_Init</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, stm32f0xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
</UL>

<P><STRONG><a name="[125]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>USART_ClockInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
</UL>

<P><STRONG><a name="[128]"></a>USART_DirectionModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>USART_MSBFirstCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>USART_DataInvCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>USART_InvPinCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>USART_SWAPPinCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>USART_ReceiverTimeOutCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>USART_SetReceiverTimeOut</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>USART_SetPrescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>USART_STOPModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>USART_StopModeWakeUpSourceConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>USART_AutoBaudRateCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>USART_AutoBaudRateConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>USART_MuteModeCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>USART_MuteModeWakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>USART_AddressDetectionConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>USART_LINCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[142]"></a>USART_SetAutoRetryCount</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>USART_SetBlockLength</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>USART_IrDAConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>USART_IrDACmd</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>USART_DECmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>USART_DEPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>USART_SetDEAssertionTime</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>USART_SetDEDeassertionTime</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>USART_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>USART_DMAReceptionErrorConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>USART_ITConfig</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, stm32f0xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
</UL>

<P><STRONG><a name="[14c]"></a>USART_RequestCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>USART_OverrunDetectionConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>USART_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>USART_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>USART_GetITStatus</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[151]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32f0xx_misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA3_EXTI_Config
</UL>

<P><STRONG><a name="[152]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_misc.o(.text), UNUSED)

<P><STRONG><a name="[153]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_misc.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>USART_INIT</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USART_INIT &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>Uart_Putc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_String_CRLF
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Puts
</UL>

<P><STRONG><a name="[45]"></a>Uart_Puts</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Uart_Puts
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Putc
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TIMEOUT_UserCallback
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleGesture
</UL>

<P><STRONG><a name="[5a]"></a>Uart_String_CRLF</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Putc
</UL>

<P><STRONG><a name="[5b]"></a>i2c_LowLevel_DeInit</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, adsp9960_platform.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_DeInit
</UL>

<P><STRONG><a name="[5e]"></a>i2c_LowLevel_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, adsp9960_platform.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i2c_LowLevel_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_I2CCLKConfig
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDS9960_i2c_Init
</UL>

<P><STRONG><a name="[60]"></a>i2c_DeInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, adsp9960_platform.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_DeInit
</UL>

<P><STRONG><a name="[46]"></a>APDS9960_i2c_Init</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, adsp9960_platform.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = APDS9960_i2c_Init &rArr; i2c_LowLevel_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_LowLevel_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>I2C_TIMEOUT_UserCallback</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, adsp9960_platform.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_TIMEOUT_UserCallback &rArr; Uart_Puts
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Puts
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataBlock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataBlock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>

<P><STRONG><a name="[154]"></a>wireWriteByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, adsp9960_platform.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>wireWriteDataByte</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, adsp9960_platform.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = wireWriteDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TIMEOUT_UserCallback
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferHandling
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityIntHighThreshold
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityIntLowThreshold
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProxPhotoMask
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProxGainCompEnable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDBoost
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureMode
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityIntEnable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAmbientLightIntEnable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDDrive
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityGain
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAmbientLightGain
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProxIntLowThresh
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProxIntHighThresh
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLightIntLowThreshold
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLightIntHighThreshold
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureEnterThresh
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureExitThresh
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureGain
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureLEDDrive
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureWaitTime
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureIntEnable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableGestureSensor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[68]"></a>wireWriteDataBlock</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, adsp9960_platform.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TIMEOUT_UserCallback
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferHandling
</UL>

<P><STRONG><a name="[69]"></a>wireReadDataByte</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, adsp9960_platform.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TIMEOUT_UserCallback
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferHandling
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGestureMode
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearProximityInt
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearAmbientLightInt
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGestureIntEnable
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProximityIntEnable
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAmbientLightIntEnable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProximityIntHighThreshold
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProximityIntLowThreshold
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLightIntHighThreshold
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLightIntLowThreshold
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGestureWaitTime
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGestureLEDDrive
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGestureGain
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGestureExitThresh
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGestureEnterThresh
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProxPhotoMask
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProxPhotoMask
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProxGainCompEnable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProxGainCompEnable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLEDBoost
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAmbientLightGain
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProximityGain
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLEDDrive
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProxIntHighThresh
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProxIntLowThresh
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readProximity
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBlueLight
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGreenLight
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readRedLight
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAmbientLight
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDBoost
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureMode
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityIntEnable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAmbientLightIntEnable
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMode
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDDrive
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityGain
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAmbientLightGain
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureGain
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureLEDDrive
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureWaitTime
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureIntEnable
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGesture
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isGestureAvailable
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[6b]"></a>wireReadDataBlock</STRONG> (Thumb, 348 bytes, Stack size 24 bytes, adsp9960_platform.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = wireReadDataBlock &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TIMEOUT_UserCallback
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferHandling
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGesture
</UL>

<P><STRONG><a name="[4a]"></a>Delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_Delay
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>ADSP_Delay</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGesture
</UL>

<P><STRONG><a name="[6d]"></a>setGestureIntEnable</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setGestureIntEnable &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableGestureSensor
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableGestureSensor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[6e]"></a>setGestureWaitTime</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setGestureWaitTime &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[6f]"></a>setGestureLEDDrive</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setGestureLEDDrive &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[70]"></a>setGestureGain</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setGestureGain &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[71]"></a>setGestureExitThresh</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = setGestureExitThresh &rArr; wireWriteDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[72]"></a>setGestureEnterThresh</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = setGestureEnterThresh &rArr; wireWriteDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[73]"></a>setLightIntHighThreshold</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = setLightIntHighThreshold &rArr; wireWriteDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[74]"></a>setLightIntLowThreshold</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = setLightIntLowThreshold &rArr; wireWriteDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[75]"></a>setProxIntHighThresh</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = setProxIntHighThresh &rArr; wireWriteDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[76]"></a>setProxIntLowThresh</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = setProxIntLowThresh &rArr; wireWriteDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[77]"></a>setAmbientLightGain</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setAmbientLightGain &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableLightSensor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[78]"></a>setProximityGain</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setProximityGain &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableProximitySensor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[79]"></a>setLEDDrive</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setLEDDrive &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableProximitySensor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[7a]"></a>getMode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = getMode &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGesture
</UL>

<P><STRONG><a name="[7b]"></a>setMode</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = setMode &rArr; getMode &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMode
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disablePower
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableGestureSensor
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableProximitySensor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableProximitySensor
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableLightSensor
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableLightSensor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enablePower
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableGestureSensor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_9960_Init
</UL>

<P><STRONG><a name="[48]"></a>ADSP_9960_Init</STRONG> (Thumb, 442 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ADSP_9960_Init &rArr; setMode &rArr; getMode &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDDrive
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityGain
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAmbientLightGain
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProxIntLowThresh
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProxIntHighThresh
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLightIntLowThreshold
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLightIntHighThreshold
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureEnterThresh
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureExitThresh
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureGain
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureLEDDrive
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureWaitTime
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureIntEnable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>enablePower</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = enablePower &rArr; setMode &rArr; getMode &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableProximitySensor
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableLightSensor
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableGestureSensor
</UL>

<P><STRONG><a name="[7d]"></a>setAmbientLightIntEnable</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableLightSensor
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableLightSensor
</UL>

<P><STRONG><a name="[7e]"></a>enableLightSensor</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAmbientLightIntEnable
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enablePower
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAmbientLightGain
</UL>

<P><STRONG><a name="[7f]"></a>disableLightSensor</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAmbientLightIntEnable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
</UL>

<P><STRONG><a name="[80]"></a>setProximityIntEnable</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableProximitySensor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableProximitySensor
</UL>

<P><STRONG><a name="[81]"></a>enableProximitySensor</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityIntEnable
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enablePower
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDDrive
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityGain
</UL>

<P><STRONG><a name="[82]"></a>disableProximitySensor</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProximityIntEnable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
</UL>

<P><STRONG><a name="[83]"></a>setGestureMode</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setGestureMode &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableGestureSensor
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableGestureSensor
</UL>

<P><STRONG><a name="[84]"></a>setLEDBoost</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setLEDBoost &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableGestureSensor
</UL>

<P><STRONG><a name="[85]"></a>resetGestureParameters</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableGestureSensor
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGesture
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableGestureSensor
</UL>

<P><STRONG><a name="[49]"></a>enableGestureSensor</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = enableGestureSensor &rArr; enablePower &rArr; setMode &rArr; getMode &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetGestureParameters
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDBoost
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureMode
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enablePower
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureIntEnable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>disableGestureSensor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetGestureParameters
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureMode
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGestureIntEnable
</UL>

<P><STRONG><a name="[42]"></a>isGestureAvailable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = isGestureAvailable &rArr; wireReadDataByte &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGesture
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleGesture
</UL>

<P><STRONG><a name="[89]"></a>decodeGesture</STRONG> (Thumb, 408 bytes, Stack size 0 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGesture
</UL>

<P><STRONG><a name="[87]"></a>processGestureData</STRONG> (Thumb, 694 bytes, Stack size 64 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = processGestureData &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGesture
</UL>

<P><STRONG><a name="[43]"></a>readGesture</STRONG> (Thumb, 260 bytes, Stack size 152 bytes, sparkfun_adsp9960.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = readGesture &rArr; processGestureData &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processGestureData
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGesture
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetGestureParameters
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMode
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADSP_Delay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataBlock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isGestureAvailable
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleGesture
</UL>

<P><STRONG><a name="[8a]"></a>disablePower</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
</UL>

<P><STRONG><a name="[8b]"></a>readAmbientLight</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[8c]"></a>readRedLight</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[8d]"></a>readGreenLight</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[8e]"></a>readBlueLight</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[8f]"></a>readProximity</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[90]"></a>getProxIntLowThresh</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[91]"></a>getProxIntHighThresh</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[92]"></a>getLEDDrive</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[93]"></a>getProximityGain</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[94]"></a>getAmbientLightGain</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[95]"></a>getLEDBoost</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[96]"></a>getProxGainCompEnable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[97]"></a>setProxGainCompEnable</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>

<P><STRONG><a name="[98]"></a>getProxPhotoMask</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[99]"></a>setProxPhotoMask</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>

<P><STRONG><a name="[9a]"></a>getGestureEnterThresh</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[9b]"></a>getGestureExitThresh</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[9c]"></a>getGestureGain</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[9d]"></a>getGestureLEDDrive</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[9e]"></a>getGestureWaitTime</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[9f]"></a>getLightIntLowThreshold</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[a0]"></a>getLightIntHighThreshold</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[a1]"></a>getProximityIntLowThreshold</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[a2]"></a>setProximityIntLowThreshold</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>

<P><STRONG><a name="[a3]"></a>getProximityIntHighThreshold</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[a4]"></a>setProximityIntHighThreshold</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireWriteDataByte
</UL>

<P><STRONG><a name="[a5]"></a>getAmbientLightIntEnable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[a6]"></a>getProximityIntEnable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[a7]"></a>getGestureIntEnable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[a8]"></a>clearAmbientLightInt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[a9]"></a>clearProximityInt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[aa]"></a>getGestureMode</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sparkfun_adsp9960.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireReadDataByte
</UL>

<P><STRONG><a name="[155]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[156]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processGestureData
</UL>

<P><STRONG><a name="[157]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[30]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[15a]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15b]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[15c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gesture.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleGesture
</UL>

<P><STRONG><a name="[15e]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[35]"></a>SetSysClock</STRONG> (Thumb, 206 bytes, Stack size 12 bytes, system_stm32f0xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[ad]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>

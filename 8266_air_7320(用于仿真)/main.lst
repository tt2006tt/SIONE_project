C51 COMPILER V9.50a   MAIN                                                                 04/08/2018 14:30:29 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\hexfirmware\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE app\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) TABS(2) OBJECT(.\hex
                    -firmware\main.obj)

line level    source

   1          #include "include\main.h"
   2          
   3          /*************************************************************
   4          ËµÃ÷£º
   5          1¡¢Options for Target¡®Target1¡¯£ºBL51 Locate->Code Range:0x100£¬ÉÕÂ¼Ñ¡ÏîÇëÑ¡ÔñDISRST£¬¸´Î»½Å×÷ÎªÆÕÍ¨IOÊ¹Ó
             -Ã£»
   6          2¡¢¸Ä±äTESTµÄ¶¨Òå£¬¿ÉÒÔ·Ö±ð²âÊÔ¶ÔÓ¦µÄ¹¦ÄÜ£»
   7          ***************************************************************/
   8          
   9          volatile unsigned char Cnt_10ms = 0;
  10          volatile unsigned char flag_10ms = 0;
  11          Typdef_ProgramPara ProgramPara = {0};
  12          
  13          static unsigned char breath_switch = 0;
  14          static unsigned char breath_i = 0;
  15          void led_breath(void){
  16   1        if(ProgramPara.flag_Alarm == 0)
  17   1        {
  18   2      
  19   2          if(breath_switch == 0)
  20   2          {
  21   3          
  22   3           LED_Ctrl(breath_i++,GREEN);
  23   3           if(breath_i >= 200){
  24   4                breath_switch = 1;
  25   4            }
  26   3          }
  27   2          else if(breath_switch == 1)
  28   2          {
  29   3      
  30   3            LED_Ctrl(breath_i--,GREEN);
  31   3            if(breath_i == 0){
  32   4               breath_switch = 0;
  33   4            }
  34   3          }
  35   2        }
  36   1        else if(ProgramPara.flag_Alarm == 2)
  37   1        {
  38   2          if(++breath_i > 100)
  39   2          {
  40   3            breath_i = 0;
  41   3            switch(breath_switch)
  42   3            {
  43   4              case 0: LED_Ctrl(200,RED);breath_switch = 1;
  44   4              break;
  45   4              case 1: LED_Ctrl(0,RED);breath_switch = 0;
  46   4              break;
  47   4            }
  48   3          }
  49   2        }
  50   1        else if(ProgramPara.flag_Alarm == 1)
  51   1        {
  52   2          
  53   2          if(++breath_i > 100)
C51 COMPILER V9.50a   MAIN                                                                 04/08/2018 14:30:29 PAGE 2   

  54   2          {
  55   3            breath_i = 0;
  56   3            switch(breath_switch)
  57   3            {
  58   4              case 0: LED_Ctrl(200,RED);LED_Ctrl(200,GREEN);breath_switch = 1;
  59   4              break;
  60   4              case 1: LED_Ctrl(0,RED);LED_Ctrl(0,GREEN);breath_switch = 0;
  61   4              break;
  62   4            }
  63   3          }
  64   2        }
  65   1        
  66   1      }
  67          
  68          void Detect(void)
  69          {
  70   1        int test = 0;
  71   1        ProgramPara.Voltage = ADCwork(AIN0,1);
  72   1        test = ProgramPara.Voltage - ProgramPara.Voltage_Offset;
  73   1        if(test < 0)
  74   1          ProgramPara.Voltage = 0;
  75   1        else
  76   1          ProgramPara.Voltage = test;
  77   1        if(ProgramPara.Voltage <= 15)//Ð¡ÓÚ2V
  78   1        { 
  79   2          LED_Ctrl(200,BLUE);
  80   2          LED_Ctrl(200,RED);
  81   2          ProgramPara.flag_Alarm = 0;
  82   2          ProgramPara.Cnt_Warning = 0;
  83   2        }
  84   1        else if((ProgramPara.Voltage > 15) && (ProgramPara.Voltage <= 30 ))//Ð¡ÓÚ3V ´óÓÚ1.5V
  85   1        {
  86   2          if(++ProgramPara.Cnt_Warning > 100 )
  87   2          {
  88   3            ProgramPara.Cnt_Warning = 0;
  89   3            ProgramPara.flag_Alarm = 1;
  90   3            LED_Ctrl(200,RED);
  91   3          }
  92   2        }
  93   1        else if(ProgramPara.Voltage > 30)//´óÓÚ2.5V
  94   1        {
  95   2          if(++ProgramPara.Cnt_Warning > 100 )
  96   2          {
  97   3            LED_Ctrl(200,GREEN);
  98   3            LED_Ctrl(200,BLUE);
  99   3            ProgramPara.Cnt_Warning = 0;
 100   3            ProgramPara.flag_Alarm = 2;
 101   3          }
 102   2        }
 103   1      }
 104          /*************************************************************
 105          ËµÃ÷£ºmain()
 106          ×Ô¼ì
 107          ***************************************************************/
 108          unsigned char test_staus = 0;
 109          void Mode_Test1(void)
 110          {
 111   1        static unsigned char i = 0;
 112   1        
 113   1        if(++i > 100)
 114   1        {
 115   2          if(test_staus == 0)
C51 COMPILER V9.50a   MAIN                                                                 04/08/2018 14:30:29 PAGE 3   

 116   2          {
 117   3            test_staus = 1;
 118   3            LED_Ctrl(200,GREEN);
 119   3            LED_Ctrl(200,RED);
 120   3            LED_Ctrl(0,BLUE);
 121   3            i = 0;
 122   3          }
 123   2          else if(test_staus == 1)
 124   2          {
 125   3            test_staus = 2;
 126   3            LED_Ctrl(200,GREEN);
 127   3            LED_Ctrl(0,RED);
 128   3            LED_Ctrl(200,BLUE);
 129   3            i = 0;
 130   3          }
 131   2          else if(test_staus == 2)
 132   2          {
 133   3            test_staus = 3;
 134   3            LED_Ctrl(0,GREEN);
 135   3            LED_Ctrl(200,RED);
 136   3            LED_Ctrl(200,BLUE);
 137   3            i = 0;
 138   3          }
 139   2          else if(test_staus == 3)
 140   2          {
 141   3            test_staus = 0;
 142   3            breath_switch = 0;
 143   3            breath_i = 0;
 144   3            i = 0;
 145   3      
 146   3            //ProgramPara.Voltage_Offset = ADCwork(AIN0,1);
 147   3            EepromWrite(0x09,0,IAPHOLD1MS);//Ð´ÈëÄ¬ÈÏµÄ±ê¶¨Öµ
 148   3            if(ProgramPara.Voltage_Offset > 30 || ProgramPara.Voltage_Offset < 5)
 149   3            {
 150   4              ProgramPara.SubMode = 0x05;//×Ô¼ìÊ§°Ü
 151   4              LED_Ctrl(200,GREEN);
 152   4              LED_Ctrl(200,RED);
 153   4              LED_Ctrl(0,BLUE);
 154   4            }
 155   3            else
 156   3            {
 157   4              ProgramPara.SubMode = 0x01;//×Ô¼ì³É¹¦
 158   4              LED_Ctrl(0,GREEN);
 159   4              LED_Ctrl(200,RED);
 160   4              LED_Ctrl(200,BLUE);
 161   4            }
 162   3            ProgramPara.Cnt_Minite = 0;
 163   3            BC(ProgramPara.flag_Time,0);
 164   3          }
 165   2          
 166   2        }
 167   1      }
 168          
 169          /*************************************************************
 170          ËµÃ÷£ºMode_Test()
 171          ±ê¶¨
 172          ***************************************************************/
 173          
 174          void Mode_Test(void)
 175          {
 176   1        static unsigned char i = 0;
 177   1        
C51 COMPILER V9.50a   MAIN                                                                 04/08/2018 14:30:29 PAGE 4   

 178   1        if(++i > 100)
 179   1        {
 180   2          if(test_staus == 0)
 181   2          {
 182   3            test_staus = 1;
 183   3            LED_Ctrl(0,GREEN);
 184   3            LED_Ctrl(200,RED);
 185   3            LED_Ctrl(200,BLUE);
 186   3            i = 0;
 187   3          }
 188   2          else if(test_staus == 1)
 189   2          {
 190   3            test_staus = 2;
 191   3            LED_Ctrl(200,GREEN);
 192   3            LED_Ctrl(0,RED);
 193   3            LED_Ctrl(200,BLUE);
 194   3            i = 0;
 195   3          }
 196   2          else if(test_staus == 2)
 197   2          {
 198   3            test_staus = 3;
 199   3            LED_Ctrl(200,GREEN);
 200   3            LED_Ctrl(200,RED);
 201   3            LED_Ctrl(0,BLUE);
 202   3            i = 0;
 203   3          }
 204   2          else if(test_staus == 3)
 205   2          {
 206   3            test_staus = 0;
 207   3            breath_switch = 0;
 208   3            breath_i = 0;
 209   3            i = 0;
 210   3            ProgramPara.Voltage_Offset = ADCwork(AIN0,1);
 211   3            EepromWrite(ProgramPara.Voltage_Offset,0,IAPHOLD1MS);
 212   3            ProgramPara.SubMode = 0x02;//±ê¶¨Íê³É
 213   3            LED_Ctrl(0,GREEN);
 214   3            LED_Ctrl(200,RED);
 215   3            LED_Ctrl(200,BLUE);
 216   3            ProgramPara.Cnt_Minite = 0;
 217   3            BC(ProgramPara.flag_Time,0);
 218   3          }
 219   2          
 220   2        }
 221   1      }
 222          
 223          
 224          /*************************************************************
 225          ËµÃ÷£ºmain()
 226          
 227          ***************************************************************/
 228          void main()
 229          {
 230   1      //  static unsigned char Cnt_2Day = 0;
 231   1        static unsigned char Cnt_Hour = 0;
 232   1        static unsigned char Cnt_Day = 0;
 233   1        unsigned char i = 0;
 234   1        
 235   1        ProgramPara.SubMode = 0x01; //Mode_Init
 236   1      
 237   1      //ÉèÖÃP21Îª´øÉÏÀ­IO key
 238   1        P21IH;
 239   1      // P12ÎªÇ¿ÍÆÍìIO ²¢ÇÒ³õÊ¼À­¸ß
C51 COMPILER V9.50a   MAIN                                                                 04/08/2018 14:30:29 PAGE 5   

 240   1        P12PM;P1 = 0x04;
 241   1      //²âÊÔPWM
 242   1        PWMwork();
 243   1        LED_Ctrl(0,GREEN);
 244   1        LED_Ctrl(200,RED);
 245   1        LED_Ctrl(200,BLUE);
 246   1      //²ÔTIMER
 247   1        Timerwork();
 248   1      
 249   1      
 250   1      
 251   1      //¶ÁÈ¡¡ª¡ªEEPROM 
 252   1        ProgramPara.Voltage_Offset = EepromRead(0);
 253   1      
 254   1        ProgramPara.SubMode = 0x01; //Mode_Init
 255   1        if((P2 & 0x02) == 0x00)//°´¼ü°´ÏÂ
 256   1        {
 257   2          for(i = 0;i< 200;i++);
 258   2          if((P2 & 0x02) == 0x00)//°´¼ü°´ÏÂ
 259   2          {
 260   3            ProgramPara.SubMode = 0x04; //Mode_test
 261   3            LED_Ctrl(200,GREEN);
 262   3            LED_Ctrl(200,RED);
 263   3            LED_Ctrl(200,BLUE);
 264   3          }
 265   2        }
 266   1        
 267   1        while(1)
 268   1        {
 269   2          while(!flag_10ms);//Õý³£Çé¿öÏÂ³ÌÐò10msÑ­»·Ò»´Î
 270   2          flag_10ms = 0;
 271   2          KeyPress();
 272   2          if(++ProgramPara.Cnt_Minite >= CNT_MINITE){
 273   3      
 274   3            ProgramPara.Cnt_Minite = 0;
 275   3            
 276   3            BS(ProgramPara.flag_Time,0);
 277   3      
 278   3            if(++Cnt_Hour>= CNT_HOUR){
 279   4              Cnt_Hour = 0;
 280   4              //BS(ProgramPara.flag_Time,1); 
 281   4              if(++Cnt_Day >= CNT_DAY){
 282   5                Cnt_Day = 0;
 283   5                //BS(ProgramPara.flag_Time,2);
 284   5              }
 285   4            }
 286   3          }
 287   2          switch(ProgramPara.SubMode)
 288   2          {
 289   3            //³õÊ¼»¯
 290   3            
 291   3            case 0x01:    if(ProgramPara.flag_Time & 0x01)
 292   3                          {
 293   4                            BC(ProgramPara.flag_Time,0);
 294   4                            ProgramPara.SubMode = 0x02; //Mode_Normal
 295   4                          }
 296   3            break;
 297   3            //ÆÕÍ¨Ä£Ê½
 298   3            case 0x02:    led_breath();
 299   3                          //¼ì²âADC
 300   3                          Detect();
 301   3            break;
C51 COMPILER V9.50a   MAIN                                                                 04/08/2018 14:30:29 PAGE 6   

 302   3            //±ê¶¨
 303   3            case 0x03:    Mode_Test();
 304   3                
 305   3            break;
 306   3            //²âÊÔÒÔ¼°×Ô¼ìÄ£Ê½
 307   3            case 0x04:    Mode_Test1();
 308   3                
 309   3            break;
 310   3            case 0x05:    LED_Ctrl(0,BLUE);
 311   3            break;
 312   3            default:ProgramPara.SubMode = 0x01;
 313   3            break;
 314   3            
 315   3          }
 316   2          
 317   2      
 318   2        }
 319   1        
 320   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    918    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
